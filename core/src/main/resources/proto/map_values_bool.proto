syntax = "proto3";

package map_hotpot;

option java_multiple_files = true;
option java_package = "org.grpctest.java.common.define";
option java_outer_classname = "MapProto";

message MapPot {
  map<bool, double> bool_double_value = 1;
  map<bool, int64> bool_int_value = 2;
  map<bool, bool> bool_bool_value = 3;
  map<bool, string> bool_string_value = 4;
  map<bool, bytes> bool_bytes_value = 5;
  map<bool, AnExampleEnum> bool_enum_value = 6;
  map<bool, Sauces> bool_message_value = 9;
}

message MapPotReversed {
  map<bool, Sauces> bool_message_value = 9;
  map<bool, AnExampleEnum> bool_enum_value = 10;
  map<bool, bytes> bool_bytes_value = 11;
  map<bool, string> bool_string_value = 12;
  map<bool, bool> bool_bool_value = 13;
  map<bool, int64> bool_int_value = 14;
  map<bool, double> bool_double_value = 15;
}

enum AnExampleEnum {
  AEE_ZERO = 0;
  AEE_ONE = 1;
  AEE_TWO = 2;
  AEE_THREE = 3;
  AEE_FOUR = 4;
  AEE_FIVE = 5;
  AEE_SIX = 6;
  AEE_SEVEN = 7;
}

message Sauces {
  optional sint32 sint32_value = 2;
  optional bytes bytes_value = 4;
}

service HotpotService {
  // UNARY
  rpc UnaryPot(MapPot) returns (MapPotReversed);
  // SERVER_STREAMING
  rpc ServerStreamingPot(MapPot) returns (stream MapPotReversed);
  // CLIENT_STREAMING
  rpc ClientStreamingPot(stream MapPot) returns (MapPotReversed);
  // BIDI_STREAMING
  rpc BidiStreamingPot(stream MapPot) returns (stream MapPotReversed);
}