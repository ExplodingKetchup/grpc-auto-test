Error handling:
- At source of error, log the error, then rethrow the Exception
- When rethrow, wrap the exception only when necessary (e.g. adding new info). Otherwise rethrow the original error
- Intermediate functions just rethrow error
- Topmost function use try catch

Limitations:
- 1 Server / Client instance per run
- 1 Server can contain multiple RPC services and methods
- 1 Client can invoke any service multiple times
- 1 param / return value per RPC method
- Namespaces not implemented:
    - A unique RPC method is identified by service name and method name only
    - A unique message is identified by its name
- Dockerfiles and compose.yaml cannot be generated at runtime
    - path-related configs should not be changed
- Cross-import between different proto namespaces is not allowed

Configs:
Configs in these projects will vary based on the set environment variable
- Nodejs: NODE_ENV -> ["test" / "deploy"]
- Python: PY_ENV -> ["test" / "deploy"]

Rpc Error:
- Only work for server-raised exceptions
- For unary and client streaming, the client cannot receive any responses when exception occurred
- For server streaming and bidi streaming, the client can receive all responses up to the point the exception is raised
on the server
